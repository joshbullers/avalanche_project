{
    "collab_server" : "",
    "contents" : "library(sqldf)\n\ndf_snowWater <- read.csv('./snotelSnowWater.csv', header = TRUE)\ndf_maxTemp <- read.csv('./snotelMaxTemps.csv', header = TRUE)\ndf_minTemp <- read.csv('./snotelMinTemps.csv', header = TRUE)\ndf_observedAvalanches <- read.csv('./observedAvalanches.csv', header = TRUE)\ndf_snotelMapping <- read.csv('./regionToSnotelMap.csv', header = TRUE)\n\ndf_snotelData <- sqldf('SELECT df_snowWater.*, df_maxTemp.maxTemp, df_minTemp.minTemp\n                        FROM df_snowWater\n                        LEFT JOIN df_maxTemp, df_minTemp\n                        ON df_snowWater.dataCard = df_maxTemp.dataCard AND df_snowWater.monthYear = df_maxTemp.monthYear AND\n                        df_snowWater.day = df_maxTemp.day AND df_snowWater.day = df_minTemp.day AND df_snowWater.dataCard = df_minTemp.dataCard\n                        AND df_snowWater.monthYear =df_minTemp.monthYear')\n\ndf_snotelData <- df_snotelData[df_snotelData$dataCard %in% df_snotelMapping$SnotelSite,]\n\ndf_snotelData$monthYear <- unlist(sapply(df_snotelData$monthYear, function(x) {\n                                  if(nchar(as.character(x)) == 3) {\n                                    return(paste(\"0\",x, sep = \"\"))\n                                  } else {\n                                      return(x)\n                                  }}))\n\ndf_snotelData$day <- unlist(sapply(df_snotelData$day, function(x) {\n                                  if (nchar(as.character(x)) == 1) {\n                                    return(paste(\"0\",x,sep = \"\"))\n                                  } else {\n                                    return(x)\n                                  }}))\n\nfullDate <- paste(df_snotelData$day, df_snotelData$monthYear, sep = \"\")\n\ndf_snotelData$date <- as.Date(fullDate, format = '%d%m%y')\n\ndf_observedAvalanches <- sqldf('SELECT df_observedAvalanches.*, df_snotelMapping.SnotelSite \n                               FROM df_observedAvalanches \n                               LEFT JOIN df_snotelMapping \n                               ON df_observedAvalanches.Region = df_snotelMapping.Region')\n\ndf_observedAvalanches$correctDate <- sapply(df_observedAvalanches$Date, function(x) {\n                                              if (grepl('\\\\.', x)) {\n                                                newDate <- as.character(as.Date(x, format = '%b. %d, %Y'))\n                                                return(newDate)\n                                              } else {\n                                                newDate <- as.character(as.Date(x, format = '%B %d, %Y'))\n                                                return(newDate)\n                                              }\n                                            })\n\ndf_observedAvalanches$correctDate <- as.Date(df_observedAvalanches$correctDate)\n\ndf_finalData <- sqldf('SELECT df_snotelData.*, df_observedAvalanches.sawAvalanche\n                      FROM df_snotelData\n                      LEFT JOIN df_observedAvalanches\n                      ON df_snotelData.date = df_observedAvalanches.correctDate AND df_snotelData.dataCard = df_observedAvalanches.SnotelSite')\n\ndf_finalData <- df_finalData[df_finalData$date >= as.Date('2014-11-01'),]\ndf_finalData <- df_finalData[df_finalData$inches > 0,]\n\ndf_noBadSnowWater <- df_snotelData[df_snotelData$inches != -999,]\ndf_noBadMinTemps <- df_snotelData[df_snotelData$minTemp != -999,]\ndf_noBadMaxTemps <- df_snotelData[df_snotelData$maxTemp != -999,]\n",
    "created" : 1458451022725.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3544519109",
    "id" : "3074EFC6",
    "lastKnownWriteTime" : 1458798339,
    "last_content_update" : 1458798339744,
    "path" : "~/Desktop/Data Science/avalanche_project/loadAndClean.R",
    "project_path" : "loadAndClean.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}